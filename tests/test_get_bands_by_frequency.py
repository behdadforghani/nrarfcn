import unittest
from nrarfcn import get_bands_by_frequency


class TestGetBandsByFrequency(unittest.TestCase):
    def test_valid_freqs(self):
        freq_band_dict = {
            617: ['n71'],
            699: ['n12'],
            703: ['n12', 'n28', 'n83'],
            717: ['n28', 'n29', 'n83'],
            747: ['n28', 'n83'],
            758: ['n14', 'n28'],
            769: ['n28'],
            791: ['n14', 'n20', 'n28'],
            799: ['n20', 'n28'],
            804: ['n20'],
            814: ['n20', 'n26'],
            815: ['n18', 'n20', 'n26'],
            822: ['n18', 'n26'],
            824: ['n5', 'n18', 'n26', 'n89'],
            831: ['n5', 'n26', 'n89'],
            832: ['n5', 'n20', 'n26', 'n82', 'n89', 'n91', 'n92'],
            850: ['n20', 'n82', 'n91', 'n92'],
            859: ['n20', 'n26', 'n82', 'n91', 'n92'],
            860: ['n18', 'n20', 'n26', 'n82', 'n91', 'n92'],
            869: ['n5', 'n18', 'n26'],
            876: ['n5', 'n26'],
            880: ['n5', 'n8', 'n26', 'n81', 'n93', 'n94'],
            895: ['n8', 'n81', 'n93', 'n94'],
            925: ['n8'],
            1427: ['n51', 'n74', 'n76', 'n91', 'n93'],
            1432: ['n50', 'n51', 'n74', 'n75', 'n76', 'n91', 'n92', 'n93', 'n94'],
            1433: ['n50', 'n74', 'n75', 'n92', 'n94'],
            1471: ['n50', 'n75', 'n92', 'n94'],
            1518: ['n74'],
            1695: ['n70'],
            1710: ['n3', 'n66', 'n70', 'n80', 'n86'],
            1711: ['n3', 'n66', 'n80', 'n86'],
            1781: ['n3', 'n80'],
            1805: ['n3'],
            1850: ['n2', 'n3', 'n25'],
            1880: ['n2', 'n3', 'n25', 'n39'],
            1881: ['n2', 'n25', 'n39'],
            1911: ['n25', 'n39'],
            1916: ['n39'],
            1920: ['n1', 'n39', 'n65', 'n84'],
            1921: ['n1', 'n65', 'n84'],
            1930: ['n1', 'n2', 'n25', 'n65', 'n84'],
            1981: ['n2', 'n25', 'n65'],
            1991: ['n25', 'n65'],
            1995: ['n25', 'n65', 'n70'],
            1996: ['n65', 'n70'],
            2010: ['n34', 'n65', 'n70', 'n95'],
            2011: ['n34', 'n70', 'n95'],
            2021: ['n34', 'n95'],
            2110: ['n1', 'n65', 'n66'],
            2171: ['n65', 'n66'],
            2300: ['n40'],
            2305: ['n30', 'n40'],
            2484: ['n53'],
            2496: ['n41', 'n90'],
            2500: ['n7', 'n41', 'n90'],
            2570: ['n7', 'n38', 'n41', 'n90'],
            2571: ['n38', 'n41', 'n90'],
            3300: ['n77', 'n78'],
            3550: ['n48', 'n77', 'n78'],
            3801: ['n77'],
            4400: ['n79'],
            24250: ['n258'],
            26500: ['n257', 'n258'],
            27500: ['n257', 'n258', 'n261'],
            27501: ['n257', 'n261'],
            28351: ['n257'],
            37000: ['n260'],
            39500: ['n259', 'n260'],
            40001: ['n259'],
            43500.0: ['n259'],
            40000.0: ['n259', 'n260'],
            39499.0: ['n260'],
            29500.0: ['n257'],
            28350.0: ['n257', 'n261'],
            27500.0: ['n257', 'n258', 'n261'],
            27499.0: ['n257', 'n258'],
            26499.0: ['n258'],
            5000.0: ['n79'],
            4200.0: ['n77'],
            3800.0: ['n77', 'n78'],
            3700.0: ['n48', 'n77', 'n78'],
            2690.0: ['n7', 'n41', 'n90'],
            2620.0: ['n7', 'n38', 'n41', 'n90'],
            2619.0: ['n38', 'n41', 'n90'],
            2499.0: ['n41', 'n90'],
            2495.0: ['n53'],
            2400.0: ['n40'],
            2360.0: ['n30', 'n40'],
            2200.0: ['n65', 'n66'],
            2170.0: ['n1', 'n65', 'n66'],
            2025.0: ['n34', 'n95'],
            2020.0: ['n34', 'n70', 'n95'],
            2010.0: ['n34', 'n65', 'n70', 'n95'],
            2009.0: ['n65', 'n70'],
            1995.0: ['n25', 'n65', 'n70'],
            1994.0: ['n25', 'n65'],
            1990.0: ['n2', 'n25', 'n65'],
            1980.0: ['n1', 'n2', 'n25', 'n65', 'n84'],
            1929.0: ['n1', 'n65', 'n84'],
            1920.0: ['n1', 'n39', 'n65', 'n84'],
            1919.0: ['n39'],
            1915.0: ['n25', 'n39'],
            1910.0: ['n2', 'n25', 'n39'],
            1880.0: ['n2', 'n3', 'n25', 'n39'],
            1879.0: ['n2', 'n3', 'n25'],
            1849.0: ['n3'],
            1785.0: ['n3', 'n80'],
            1780.0: ['n3', 'n66', 'n80', 'n86'],
            1710.0: ['n3', 'n66', 'n70', 'n80', 'n86'],
            1709.0: ['n70'],
            1518.0: ['n74'],
            1517.0: ['n50', 'n74', 'n75', 'n92', 'n94'],
            1474.0: ['n50', 'n75', 'n92', 'n94'],
            1432.0: ['n50', 'n51', 'n74', 'n75', 'n76', 'n91', 'n92', 'n93', 'n94'],
            1431.0: ['n51', 'n74', 'n76', 'n91', 'n93'],
            960.0: ['n8'],
            915.0: ['n8', 'n81', 'n93', 'n94'],
            894.0: ['n5', 'n8', 'n26', 'n81', 'n93', 'n94'],
            879.0: ['n5', 'n26'],
            875.0: ['n5', 'n18', 'n26'],
            868.0: ['n18', 'n26'],
            862.0: ['n18', 'n20', 'n26', 'n82', 'n91', 'n92'],
            859.0: ['n20', 'n26', 'n82', 'n91', 'n92'],
            858.0: ['n20', 'n82', 'n91', 'n92'],
            849.0: ['n5', 'n20', 'n26', 'n82', 'n89', 'n91', 'n92'],
            831.0: ['n5', 'n26', 'n89'],
            830.0: ['n5', 'n18', 'n26', 'n89'],
            821.0: ['n18', 'n20', 'n26'],
            814.0: ['n20', 'n26'],
            813.0: ['n20'],
            803.0: ['n20', 'n28'],
            798.0: ['n14', 'n20', 'n28'],
            790.0: ['n14', 'n28'],
            787.0: ['n28'],
            748.0: ['n28', 'n83'],
            746.0: ['n12', 'n28', 'n83'],
            728.0: ['n28', 'n29', 'n83'],
            702.0: ['n12'],
            698.0: ['n71'],
        }

        for freq, bands in freq_band_dict.items():
            self.assertListEqual(bands, get_bands_by_frequency(freq))

    def test_invalid_freqs(self):
        invalid_freqs = {
            -1.0,
            -1,
            -0.01,
            100000.01,
            100001,
            100001.0,
            None,
            '',
            '60000'
        }

        for freq in invalid_freqs:
            with self.assertRaises(ValueError):
                get_bands_by_frequency(freq)


    def test_no_band(self):
        no_band = [
            0,
            616,
            653,
            662,
            749,
            757,
            916,
            924,
            961,
            1426,
            1519,
            1694,
            1786,
            1804,
            2026,
            2109,
            2201,
            2299,
            2401,
            2483,
            2691,
            3299,
            4201,
            4399,
            5001,
            24249,
            29501,
            36999,
            43501,
            100000
        ]

        for freq in no_band:
            self.assertListEqual([], get_bands_by_frequency(freq))
